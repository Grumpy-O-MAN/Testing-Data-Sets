TestingGroups= 3#int(input('How many groups? (including the controll): '))
#ya know it would be nice if based on the numebr of groups it would spit out diffrent numbers of number sets to work out...
IDs = [77,97,122,139,178,227,264,267,284,340,362,381,425,430,440,454,460,518,
522,528,531,537,596,597,630,645,657,664,672,687,721,725,733,737,852,903,904,906,933,
938,979,980,995,1001,1003,1005,1017,1041,1073,1078,1106,1116,1122,1137,1167,1205,1246,
1264,1285,1287,1298,1307,1327,1331,1336,1365,1367,1373,1375,1376,1377,1378,1379,1381,
1382,1383,1384,1385,1386,1387,1388,1389,1391,1393,1394,1395,1397,1398,1399,1400,1401,
1402,1403,1404,1405,1406,1408,1409,1410,1411,1412,1414,1415,1416,1417,1418,1419,1420,
1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1438,
1439,1440,1441,1442,1443,1444,1445,1446,1447,1449,1450,1452,1483,1484,1488,1498,1509,
1520,1523,1536,1586,1587,1589,1590,1591,1592,1594,1596,1597,1599,1600,1601,1602,1604,
1605,1606,1608,1610,1611,1614,1616,1617,1619,1621,1622,1623,1624,1625,1626,1627,1628,
1629,1630,1632,1633,1634,1635,1636,1638,1639,1640,1641,1642,1643,1644,1646,1648,1649,
1650,1651,1652,1653,1654,1655,1656,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,
1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,
1685,1686,1688,1689,1690,1692,1693,1694,1696,1697,1699,1700,1702,1704,1705,1706,1707,
1708,1710,1711,1712,1714,1716,1717,1718,1719,1720,1721,1724,1725,1726,1727,1728,1729,
1730,1734,1735,1736,1737,1738,1740,1742,1743,1744,1745,1748,1749,1750,1751,1752,1753,
1754,1755,1756,1757,1759,1760,1761,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,
1773,1774,1775,1776,1777,1778,1779,1780,1782,1784,1786,1787,1788,1789,1792,1793,1794,
1796,1797,1799,1801,1802,1803,1804,1805,1808,1810,1811,1812,1813,1814,1817,1818,1832,
1850,1873,1909,1914,1921,1935,1961,1969,1998,2021,2047,2048,2057,2083,2084,2090,2091,
2136,2148,2154,2162,2197,2203,2221,2238,2248,2251,2254,2259,2273,2274,2277,2288,2290,
2292,2300,2322,2333,2367,2383,2391,2409,2421,2426,2427,2428,2458,2513,2536,2541,2551,
2561,2562,2563,2572,2573,2574,2582,2589,2593,2594,2628,2636,2664,2669,2678,2683,2706,
2727,2758,2766,2772,2775,2777,2783,2799,2823,2833,2851,2878,2882,2884,2910,2914,2944,
2955,2987,3007,3029,3067,3078,3084,3107,3154,3171,3184,3213,3216,3232,3234,3244,3249,
3257,3267,3268,3270,3271,3272,3273,3274,3275,3278,3279,3280,3281,3282,3283,3284,3285,
3287,3288,3290,3291,3292,3293,3294,3296,3297,3298,3299,3300,3302,3303,3304,3305,3306,
3307,3309,3310,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3322,3326,3327,3328,
3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3341,3342,3343,3344,3345,3346,3347,
3349,3352,3361,3362,3405,3450,3456,3513,3526,3527,3529,3530,3535,3537,3578,3585,3604,
3606,3611,3613,3625,3631,3648,3671,3691,3693,3696,3699,3728,3747,3749,3788,3797,3798,
3809,3826,3860,3866,3870,3912,3913,3928,3954,3958,4022,4028,4029,4039,4040,4041,4044,
4066,4075,4092,4095,4096,4105,4135,4154,4167,4192,4298,4304,4314,4326,4337,4341,4355,
4364,4365,4370,4381,4384,4389,4397,4410,4417,4420,4421,4422,4423,4434,4458,4460,4461,
4462,4463,4465,4466,4480,4481,4482,4483,4488,4497,4515,4516,4517,4519,4520,4521,4523,
4529,4536,4546,4548,4549,4569,4570,4573,4577,4578,4582,4585,4596,4597,4601,4619,4623,
4632,4637,4640,4641,4645,4646,4647,4648,4649,4650,4651,4657,4660,4661,4665,4677,4682,
4693,4694,4695,4696,4697,4698,4699,4701,4702,4703,4706,4711,4712,4714,4716,4717,4718,
4722,4723,4727,4730,4732,4733,4734,4759,4789,4847,4853,4870,4897,4899,4900,4901,4902,
4903,4905,4907,4908,4911,4913,4914,4915,4916,4917,4919,4922,4943,5012,5016,5017,5018,
5020,5021,5023,5025,5027,5031,5032,5047,5127,5141,5264,5290,5295,5322,5328,5333,5340,
5341,5344,5347,5348,5349,5353,5363,5364,5410,5411,5425,5426,5435,5442,5475,5481,5482,
5483,5484,5485,5490,5492,5498,5499,5500,5501,5502,5503,5504,5509,5510,5511,5512,5513,
5518,5521,5523,5524,5526,5528,5529,5530,5531,5532,5533,5534,5535,5536,5537,5538,5539,
5540,5541,5542,5543,5544,5545,5546,5547,5548,5549,5550,5551,5552,5553,5554,5555,5556,
5557,5558,5559,5560,5562,5564,5565,5566,5567,5568,5569,5570,5572,5573,5574,5576,5577,
5578,5579,5580,5581,5583,5584,5585,5586,5587,5588,5589,5590,5591,5592,5593,5594,5595,
5596,5597,5598,5599,5600,5601,5602,5603,5604,5605,5606,5607,5608,5609,5610,5611,5612,
5613,5614,5615,5616,5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627,5628,5629,
5630,5632,5633,5634,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646,5648,
5649,5650,5651,5652,5653,5654,5656,5657,5658,5660,5661,5662,5663,5664,5665,5666,5667,
5670,5671,5672,5673,5674,5675,5676,5677,5678,5693,5696,5705,5707,5763,5765,5766,5769,
5770,5771,5777,5781,5782,5800,5801,5802,5810,5811,5812,5814,5823,5825,5828,5832,5833,
5834,5835,5839,5842,5865,5866,5867,5868,5870,5871,5872,5873,5874,5876,5877,5878,5879,
5880,5881,5884,5885,5886,5887,5888,5889,5898,5923,5926,5933,5934,5935,5937,5938,5943,
5954,5977,5988,5993,5994,6004,6008,6009,6027,6028,6029,6042,6049,6055,6056,6078,6085,
6087,6088,6089,6090,6091,6092,6093,6094,6095,6098,6099,6101,6104,6105,6112,6113,6114,
6116,6125,6127,6128,6130,6131,6132,6133,6134,6135,6136,6137,6138,6139,6140,6141,6143,
6144,6145,6146,6147,6148,6150,6152,6153,6154,6155,6156,6157,6158,6165,6166,6167,6171,
6177,6178,6180,6181,6190,6194,6198,6204,6210,6229,6243,6246,6257,6268,6271,6281,6287,
6294,6327,6330,6337,6352,6358,6359,6372,6374,6378,6387,6389,6391,6394,6395,6396,6413,
6416,6418,6419,6426,6434,6436,6442,6450,6456,6463,6468,6469,6472,6473,6474,6476,6478,
6479,6480,6481,6482,6483,6485,6486,6488,6489,6490,6491,6492,6493,6494,6496,6498,6500,
6502,6505,6507,6508,6510,6515,6520,6522,6523,6526,6527,6529,6532,6533,6534,6535,6536,
6539,6540,6541,6542,6543,6544,6546,6547,6549,6550,6556,6557,6558,6560,6561,6562,6563,
6564,6568,6569,6571,6572,6573,6574,6575,6576,6577,6578,6580,6582,6584,6586,6587,6589,
6590,6592,6593,6594,6595,6597,6598,6599,6604,6605,6606,6607,6608,6611,6612,6613,6614,
6615,6620,6621,6622,6623,6624,6626,6627,6629,6661,6668,6674,6675,6676,6677,6678,6679,
6683,6684,6685,6686,6687,6688,6689,6691,6692,6693,6694,6696,6699,6700,6702,6704,6705,
6706,6707,6708,6709,6710,6711,6715,6717,6718,6719,6720,6721,6723,6724,6726,6727,6728,
6729,6730,6731,6733,6734,6738,6739,6740,6741,6743,6746,6747,6748,6749,6750,6752,6753,
6754,6755,6756,6757,6758,6759,6760,6761,6762,6763,6765,6766,6767,6768,6769,6771,6774,
6775,6777,6779,6781,6785,6787,6788,6789,6794,6823,6835,6837,6842,6846,6847,6848,6849,
6850,6851,6852,6853,6854,6855,6856,6857,6858,6860,6861,6862,6863,6864,6865,6867,6868,
6869,6870,6871,6872,6873,6874,6875,6876,6877,6879,6880,6881,6882,6883,6884,6885,6886,
6888,6889,6890,6891,6893,6894,6895,6896,6897,6898,6899,6900,6906,6921,6924,6925,5019]
import random
#import pyperclip
random.shuffle(IDs)
length=int(len(IDs)/TestingGroups)
for i in range (TestingGroups):
        print('',end='')
        print('======================================================  GROUP '+str(i+1)+'  ======================================================')
        start = (i*(length))
        end = ((i+1)*(length))
        #figures out where your index 1.starts and 2.ends
        print (IDs[start:end])
        #prints list
 #KeepGoing = input('if your ready to keep going, i can copy this list to your clipboard, if so hit any key. otherwise use ctrl + c.')
        #tells you it's put into the clipboard
 #will replace "," with new lines insted
 #pyperclip.copy()
        #sets slice to copy
        print('==========================================================  *  ==========================================================')
        
        KeepGoing = input('if your ready to keep going, we can move on to the next set of numbers or end the program, if so hit any key. otherwise use ctrl + c. ')
        #hit y to continue (any will do)
